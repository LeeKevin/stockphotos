# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-03-20 03:53
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_profile_picture'),
    ]

    operations = [
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(editable=False)),
            ],
            options={
                'abstract': False,
            },
            bases=(utils.models.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Photographer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(editable=False)),
                ('approved', models.BooleanField(default=False)),
                ('handle', models.CharField(help_text='The username for this photographer.', max_length=100)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.CharField(blank=True, max_length=150, null=True)),
                ('instagram', models.CharField(blank=True, max_length=100, null=True)),
                ('twitter', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(utils.models.ModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(editable=False)),
                ('modified_at', models.DateTimeField(editable=False)),
                ('plan', models.PositiveSmallIntegerField(choices=[(0, 'Free'), (1, 'Premium')], default=0, verbose_name='plan')),
                ('subscription_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='subscription_id')),
                ('subscribed_until', models.DateField(blank=True, help_text='Designates the period for which this subscription is valid.', null=True, verbose_name='subscribed until')),
                ('will_renew', models.BooleanField(default=False, help_text='Designates whether this subscription will renew at the end of the subscription period.', verbose_name='will auto renew')),
                ('photographer_status', models.BooleanField(default=False, help_text='Designates whether this subscription was granted because of special photographer status.')),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='customer_id',
            field=models.CharField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='customer id'),
        ),
        migrations.AddField(
            model_name='user',
            name='has_valid_payment',
            field=models.NullBooleanField(help_text='Designates whether this user has a payment method in good standing.', verbose_name='has valid payment'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='email address'),
        ),
        migrations.AddField(
            model_name='photographer',
            name='followers',
            field=models.ManyToManyField(blank=True, related_name='following', through='accounts.Follower', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='follower',
            name='photographer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Photographer'),
        ),
        migrations.AddField(
            model_name='follower',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='photographer',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Photographer'),
        ),
        migrations.AddField(
            model_name='user',
            name='subscription',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Subscription'),
        ),
    ]
